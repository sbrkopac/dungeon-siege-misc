<?xml version="1.0" encoding="UTF-8"?>
<data>

    <enumDef name="signature" type="uint32">
        <entry name="0" value="1146048083" />
    </enumDef>

    <struct name="SNO">

        <!-- header -->
        <struct name="header">
            <enum type="uint32" name="signature" enum="signature" />
            <primitive type="uint32" name="version" />
            <primitive type="uint32" name="unk0" />
            <primitive type="uint32" name="doors" />
            <primitive type="uint32" name="spots" />
            <primitive type="uint32" name="corners" />
            <primitive type="uint32" name="faces" />
            <primitive type="uint32" name="textures" />

            <struct name="bbox (min)">
                <primitive type="float" name="x" />
                <primitive type="float" name="y" />
                <primitive type="float" name="z" />
            </struct>

            <struct name="bbox (max)">
                <primitive type="float" name="x" />
                <primitive type="float" name="y" />
                <primitive type="float" name="z" />
            </struct>

            <primitive type="uint32" name="unk1" />
            <primitive type="uint32" name="unk2" />
            <primitive type="uint32" name="unk3" />
            <primitive type="uint32" name="unk4" />
            <primitive type="uint32" name="unk5" />
            <primitive type="uint32" name="unk6" />
            <primitive type="uint32" name="unk7" />
            <primitive type="uint32" name="checksum" />
        </struct>

        <!-- spots -->
        <array name="spots" length="function(root) { return root.header.spots.value; }">
            <struct name="spot">
                <primitive type="float" name="r0" />
                <primitive type="float" name="r1" />
                <primitive type="float" name="r2" />
                <primitive type="float" name="r3" />
                <primitive type="float" name="r4" />
                <primitive type="float" name="r5" />
                <primitive type="float" name="r6" />
                <primitive type="float" name="r7" />
                <primitive type="float" name="r8" />
                <primitive type="float" name="px" />
                <primitive type="float" name="py" />
                <primitive type="float" name="pz" />
            </struct>
            <!-- TODO: read a string -->
        </array>

        <!-- doors -->
        <array name="doors" length="function(root) { return root.header.doors.value; }">
            <struct name="door">
                <primitive type="uint32" name="index" />
                <struct name="transform">
                    <primitive type="float" name="px" />
                    <primitive type="float" name="py" />
                    <primitive type="float" name="pz" />
                    <primitive type="float" name="r0" />
                    <primitive type="float" name="r1" />
                    <primitive type="float" name="r2" />
                    <primitive type="float" name="r3" />
                    <primitive type="float" name="r4" />
                    <primitive type="float" name="r5" />
                    <primitive type="float" name="r6" />
                    <primitive type="float" name="r7" />
                    <primitive type="float" name="r8" />
                </struct>
                <primitive type="uint32" name="numHotSpots" />
                <array name="hotSpots" length="numHotSpots">
                    <primitive type="uint32" name="value" />
                </array>
            </struct>
        </array>

        <!-- corners -->
        <array name="corners" length="function(root) { return root.header.corners.value; }">
            <struct name="corner">
                <struct name="position">
                    <primitive type="float" name="x" />
                    <primitive type="float" name="y" />
                    <primitive type="float" name="z" />
                </struct>
                <struct name="normal">
                    <primitive type="float" name="x" />
                    <primitive type="float" name="y" />
                    <primitive type="float" name="z" />
                </struct>
                <struct name="color">
                    <primitive type="uint8" name="r" />
                    <primitive type="uint8" name="g" />
                    <primitive type="uint8" name="b" />
                    <primitive type="uint8" name="a" />
                </struct>
                <struct name="uvcoords">
                    <primitive type="float" name="u" />
                    <primitive type="float" name="v" />
                </struct>
            </struct>
        </array>

        <!-- surfaces -->
        <array name="surfaces" length="function(root) { return root.header.textures.value; }">
            <struct name="surface">
                <string encoding="ASCII" name="texture" />
                <primitive type="uint32" name="startCorner" />
                <primitive type="uint32" name="spanCorner" />
                <primitive type="uint32" name="numCorners" />
                <array name="faces" length="function() { return this.parent.numCorners.value / 3; }">
                    <struct name="face">
                        <primitive type="uint16" name="a" />
                        <primitive type="uint16" name="b" />
                        <primitive type="uint16" name="c" />
                    </struct>
                </array>
            </struct>
        </array>

        <struct name="mystery">

            <primitive type="uint32" name="maybeSomeCount" />
            <primitive type="uint8" name="unkOrAlignBit" />

            <struct name="bounding box">
                <struct name="min">
                    <primitive type="float" name="x" />
                    <primitive type="float" name="y" />
                    <primitive type="float" name="z" />
                </struct>
                <struct name="max">
                    <primitive type="float" name="x" />
                    <primitive type="float" name="y" />
                    <primitive type="float" name="z" />
                </struct>
            </struct>

            <primitive type="uint32" name="unk" />

            <primitive type="uint32" name="someCountOfCrazyStructs" />
            <array name="crazyStructs" length="someCountOfCrazyStructs">
                <struct name="crazyStruct">
                    <primitive type="uint16" name="indexOffset" />

                    <primitive type="float" name="unk0" />
                    <primitive type="float" name="unk1" />
                    <primitive type="float" name="unk2" />
                    <primitive type="float" name="unk3" />
                    <primitive type="float" name="unk4" />
                    <primitive type="float" name="unk5" />
                    <primitive type="float" name="unk6" />
                    <primitive type="float" name="unk7" />
                    <primitive type="float" name="unk8" />

                    <primitive type="uint16" name="firstCountOfShorts" />
                    <array name="firstSetOfShorts" length="firstCountOfShorts">
                        <primitive type="uint16" name="value" />
                    </array>

                    <primitive type="uint32" name="secondCountOfShorts" />
                    <array name="secondSetOfShorts" length="secondCountOfShorts">
                        <primitive type="uint16" name="value" />
                    </array>
                </struct>
            </array>

            <primitive type="uint32" name="maybeSomeCountOrBinaryIndicator" />
            <primitive type="uint8" name="unkOrAlignBit" />

            <array name="optionalSection" length="maybeSomeCountOrBinaryIndicator">
                <struct name="blah">

                    <primitive type="uint32" name="countOfShortPairs" />
                    <array name="setOfShortPairs" length="function() { return this.parent.countOfShortPairs.value * 2; }">
                        <primitive type="uint16" name="value" />
                    </array>

                    <primitive type="uint32" name="countOfTriangles" />
                    <array name="triangles" length="countOfTriangles">
                        <struct name="triangleStuff">
                            <struct name="triangle">
                                <struct name="a">
                                    <primitive type="float" name="x" />
                                    <primitive type="float" name="y" />
                                    <primitive type="float" name="z" />
                                </struct>
                                <struct name="a">
                                    <primitive type="float" name="x" />
                                    <primitive type="float" name="y" />
                                    <primitive type="float" name="z" />
                                </struct>
                                <struct name="a">
                                    <primitive type="float" name="x" />
                                    <primitive type="float" name="y" />
                                    <primitive type="float" name="z" />
                                </struct>
                            </struct>

                            <struct name="triangle">
                                <struct name="a">
                                    <primitive type="float" name="x" />
                                    <primitive type="float" name="y" />
                                    <primitive type="float" name="z" />
                                </struct>
                                <struct name="a">
                                    <primitive type="float" name="x" />
                                    <primitive type="float" name="y" />
                                    <primitive type="float" name="z" />
                                </struct>
                                <struct name="a">
                                    <primitive type="float" name="x" />
                                    <primitive type="float" name="y" />
                                    <primitive type="float" name="z" />
                                </struct>
                            </struct>
                        </struct>
                    </array>

                </struct>
            </array>

            <!-- <primitive type="uint32" name="anotherCountOfCrazyStructs" /> -->

        </struct>

    </struct>

<!--

<enumDef name="SignatureEnum" type="uint16" >
   <entry name="'BM'" value="19778" />
</enumDef>

<enumDef name="MustBeZeroUInt16Enum" type="uint16">
   <entry name="0" value="0" />
</enumDef>

<enumDef name="MustBeZeroUInt32Enum" type="uint32">
   <entry name="0" value="0" />
</enumDef>

<enumDef name="CompressionTypeEnum" type="uint32">
   <entry name="None" value="0" />
   <entry name="RLE 8bpp" value="1" />
   <entry name="RLE 4bpp" value="2" />
   <entry name="Bit field" value="3" />
   <entry name="JPEG" value="4" />
   <entry name="PNG" value="5" />
</enumDef>

<enumDef name="HeaderTypeEnum" type="uint32">
   <entry name="v1" value="12" />
   <entry name="v2" value="64" />
   <entry name="v3" value="40" />
   <entry name="v4" value="52" />
   <entry name="v5" value="56" />
   <entry name="v6" value="108" />
   <entry name="v7" value="124" />
</enumDef>

<enumDef name="PlanesEnum" type="uint16" >
   <entry name="1" value="1" />
</enumDef>

<enumDef name="BitCountEnum" type="uint16" >
   <entry name="specified by JPEG or PNG" value="0" />
   <entry name="monochrome" value="1" />
   <entry name="16 colors" value="4" />
   <entry name="256 colors" value="8" />
   <entry name="65_536 colors" value="16" />
   <entry name="16_777_216 colors" value="24" />
   <entry name="4_294_967_296 colors" value="32" />
</enumDef>

<enumDef name="ColorSpaceEnum" type="uint32" >
   <entry name="CALIBRATED_RGB" value="0" />
   <entry name="sRGB" value="1" />
   <entry name="WINDOWS_COLOR_SPACE" value="2" />
   <entry name="PROFILE_LINKED" value="3" />
   <entry name="PROFILE_EMBEDDED" value="4" />
</enumDef>

<enumDef name="IntentEnum" type="uint32" >
   <entry name="GM_ABS_COLORIMETRIC" value="8" />
   <entry name="GM_BUSINESS" value="1" />
   <entry name="GM_GRAPHICS" value="2" />
   <entry name="GM_IMAGES" value="4" />
</enumDef>

<struct name="BMP (human readable names)" >



<struct name="file header" >
   <enum type="uint16" name="signature" enum="SignatureEnum" />
   <primitive type="uint32" name="file size" />
   <enum type="uint16" name="reserved 1" enum="MustBeZeroUInt16Enum" />
   <enum type="uint16" name="reserved 2" enum="MustBeZeroUInt16Enum" />
   <primitive type="uint32" name="data offset" />
</struct>



<union name="data headers">

<enum type="uint32" name="data header size" enum="HeaderTypeEnum" />

<struct name="v1 (12 bytes)" >
   <enum type="uint32" name="data header size" enum="HeaderTypeEnum" />
   <primitive type="uint16" name="width, pixels" />
   <primitive type="uint16" name="height, pixels" />
   <enum type="uint16" name="planes" enum="PlanesEnum" />
   <enum type="uint16" name="colors" enum="BitCountEnum" />
</struct>

<struct name="v2 (64 bytes)" >
   <enum type="uint32" name="data header size" enum="HeaderTypeEnum" />
   <primitive type="uint32" name="width, pixels" />
   <primitive type="uint32" name="height, pixels" />
   <enum type="uint16" name="planes" enum="PlanesEnum" />
   <enum type="uint16" name="colors" enum="BitCountEnum" />
   <enum type="uint32" name="compression" enum="CompressionTypeEnum" />
   <primitive type="uint32" name="image size, bytes" />
   <primitive type="uint32" name="horizontal resolution, pixels/meter" />
   <primitive type="uint32" name="vertical resolution, pixels/meter" />
   <primitive type="uint32" name="number of used colors in color table" />
   <primitive type="uint32" name="number of important colors" />
   <primitive type="uint16" name="WORD bc2ResUnit" />
   <primitive type="uint16" name="WORD bc2Reserved" />
   <primitive type="uint16" name="WORD bc2Orientation" />
   <primitive type="uint16" name="WORD bc2Halftoning" />
   <primitive type="uint32" name="DWORD bc2HalftoneSize1" />
   <primitive type="uint32" name="DWORD bc2HalftoneSize2" />
   <primitive type="uint32" name="DWORD bc2ColorSpace" />
   <primitive type="uint32" name="DWORD bc2AppData" />
</struct>

<struct name="v3 (40 bytes)" >
   <enum type="uint32" name="data header size" enum="HeaderTypeEnum" />
   <primitive type="int32" name="width, pixels" />
   <primitive type="int32" name="height, pixels" />
   <enum type="uint16" name="planes" enum="PlanesEnum" />
   <enum type="uint16" name="colors" enum="BitCountEnum" />
   <enum name="compression" type="uint32" enum="CompressionTypeEnum" />
   <primitive type="uint32" name="image size, bytes" />
   <primitive type="int32" name="horizontal resolution, pixels/meter" />
   <primitive type="int32" name="vertical resolution, pixels/meter" />
   <primitive type="uint32" name="number of used colors in color table" />
   <primitive type="uint32" name="number of important colors" />
</struct>

<struct name="v4 (52 bytes)" >
   <enum type="uint32" name="data header size" enum="HeaderTypeEnum" />
   <primitive type="int32" name="width, pixels" />
   <primitive type="int32" name="height, pixels" />
   <enum type="uint16" name="planes" enum="PlanesEnum" />
   <enum type="uint16" name="colors" enum="BitCountEnum" />
   <enum type="uint32" name="compression" enum="CompressionTypeEnum" />
   <primitive type="uint32" name="image size, bytes" />
   <primitive type="int32" name="horizontal resolution, pixels/meter" />
   <primitive type="int32" name="vertical resolution, pixels/meter" />
   <primitive type="uint32" name="number of used colors in color table" />
   <primitive type="uint32" name="number of important colors" />
   <array name="undocumented" length="6">
      <primitive type="uint16" name="undocumented" />
   </array>
</struct>

<struct name="v5 (56 bytes)" >
   <enum type="uint32" name="data header size" enum="HeaderTypeEnum" />
   <primitive type="int32" name="width, pixels" />
   <primitive type="int32" name="height, pixels" />
   <enum type="uint16" name="planes" enum="PlanesEnum" />
   <enum type="uint16" name="colors" enum="BitCountEnum" />
   <enum type="uint32" name="compression" enum="CompressionTypeEnum" />
   <primitive type="uint32" name="image size, bytes" />
   <primitive type="int32" name="horizontal resolution, pixels/meter" />
   <primitive type="int32" name="vertical resolution, pixels/meter" />
   <primitive type="uint32" name="number of used colors in color table" />
   <primitive type="uint32" name="number of important colors" />
   <array name="undocumented" length="8">
      <primitive type="uint16" name="undocumented" />
   </array>
</struct>

<struct name="v6 (108 bytes)" >
   <enum type="uint32" name="data header size" enum="HeaderTypeEnum" />
   <primitive type="int32" name="width, pixels" />
   <primitive type="int32" name="height, pixels" />
   <enum type="uint16" name="planes" enum="PlanesEnum" />
   <enum type="uint16" name="colors" enum="BitCountEnum" />
   <enum type="uint32" name="compression" enum="CompressionTypeEnum" />
   <primitive type="uint32" name="image size, bytes" />
   <primitive type="int32" name="horizontal resolution, pixels/meter" />
   <primitive type="int32" name="vertical resolution, pixels/meter" />
   <primitive type="uint32" name="number of used colors in color table" />
   <primitive type="uint32" name="number of important colors" />
   <primitive type="uint32" name="mask for red" />
   <primitive type="uint32" name="mask for green" />
   <primitive type="uint32" name="mask for blue" />
   <primitive type="uint32" name="mask for alpha" />
   <enum type="uint32" name="color space" enum="ColorSpaceEnum" />

   <struct name="colors coordinates" >
      <struct name="red" >
         <primitive type="float" name="x" />
         <primitive type="float" name="y" />
         <primitive type="float" name="z" />
      </struct>
      <struct name="green" >
         <primitive type="float" name="x" />
         <primitive type="float" name="y" />
         <primitive type="float" name="z" />
      </struct>
      <struct name="blue" >
         <primitive type="float" name="x" />
         <primitive type="float" name="y" />
         <primitive type="float" name="z" />
      </struct>
   </struct>

   <struct name="gamma red">
      <primitive type="uint16" name="integer part" />
      <primitive type="uint16" name="fractional part" />
   </struct>
   <struct name="gamma green">
      <primitive type="uint16" name="integer part" />
      <primitive type="uint16" name="fractional part" />
   </struct>
   <struct name="gamma blue">
      <primitive type="uint16" name="integer part" />
      <primitive type="uint16" name="fractional part" />
   </struct>
</struct>

<struct name="v7 (124 bytes)" >
   <enum type="uint32" name="data header size" enum="HeaderTypeEnum" />
   <primitive type="int32" name="width, pixels" />
   <primitive type="int32" name="height, pixels" />
   <enum type="uint16" name="planes" enum="PlanesEnum" />
   <enum type="uint16" name="colors" enum="BitCountEnum" />
   <enum type="uint32" name="compression" enum="CompressionTypeEnum" />
   <primitive type="uint32" name="image size, bytes" />
   <primitive type="int32" name="horizontal resolution, pixels/meter" />
   <primitive type="int32" name="vertical resolution, pixels/meter" />
   <primitive type="uint32" name="number of used colors in color table" />
   <primitive type="uint32" name="number of important colors" />
   <primitive type="uint32" name="mask for red" />
   <primitive type="uint32" name="mask for green" />
   <primitive type="uint32" name="mask for blue" />
   <primitive type="uint32" name="mask for alpha" />
   <primitive type="uint32" name="color space" enum="ColorSpaceEnum" />

   <struct name="colors coordinates" >
      <struct name="red" >
         <primitive type="float" name="x" />
         <primitive type="float" name="y" />
         <primitive type="float" name="z" />
      </struct>
      <struct name="green" >
         <primitive type="float" name="x" />
         <primitive type="float" name="y" />
         <primitive type="float" name="z" />
      </struct>
      <struct name="blue" >
         <primitive type="float" name="x" />
         <primitive type="float" name="y" />
         <primitive type="float" name="z" />
      </struct>
   </struct>

   <struct name="gamma red">
      <primitive type="uint16" name="integer part" />
      <primitive type="uint16" name="fractional part" />
   </struct>
   <struct name="gamma green">
      <primitive type="uint16" name="integer part" />
      <primitive type="uint16" name="fractional part" />
   </struct>
   <struct name="gamma blue">
      <primitive type="uint16" name="integer part" />
      <primitive type="uint16" name="fractional part" />
   </struct>

   <enum type="uint32" name="intent" enum="IntentEnum" />
   <primitive type="uint32" name="profile data offset from beginning of data header" />
   <primitive type="uint32" name="profile data size, bytes" />
   <enum type="uint32" name="reserved" enum="MustBeZeroUInt32Enum" />
</struct>


</union>


</struct>

-->

</data>

